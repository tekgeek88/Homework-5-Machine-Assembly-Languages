; A machine language program that prints out the letters: ZYX..DCBAABCD....XYZ.
; That's a total of 26 *2 = 52 letters. You must use one or two loops.
; Carl Argabright
; Ethan Cheatham
; TCSS 371 - Fall 2018

; Instructions
0011 0000 0000 0000 ; Start at memory address x3000
0010 000 000001101  ; Initialize our output register with 'Z' which is x5A
                    ; LD R0, M[PC + 13]
0010 001 000001101  ; Initialize R1 with 52 which is x34 (R1)
                    ; LD R1, M[PC + 13]
0010 010 000001101  ; Initialize R2 with -1 which will at first be our decrementer
                    ; LD R2, M[PC + 13]
0010 011 000001101  ; Initialize R3 with -26 which will be our midpoint
                    ; LD R3, M[PC + 13]
0000 010 00000 1000 ; BR if R1 is 0, hal
                    ; GOTO [PC + 8]
1111 0000 0010 0001 ; TRAP x21 Print R0
0001 100 011 000 001; ADD R3 to R1, Check to see if we are at index 27
                    ; R4 <- R3 + R1, R4 is only used to change our CC code

; If we are not at the midpoint our normal increment or decrement the value in R0
0000 101 0 0000 0010; 
; If R1 is zero we start incrementing instead of decrementing and continue
0001 010 010 1 00010; R2 <- R2 + #2, change R2 from -1 to 1
0000 111 00000 0001 ; (PC + 1 offset) 
0001 000 000 000 010; Decrement or increment R0
0001 001 001 1 11111; Decrement R1 our counter, R1 <-- R1 - #1
0000 1111 1111 0111 ; (-9 offset) Go back to check if R1 is 0
1111 0000 0010 0101 ; TRAP x25 Halt

; Data
0000 0000 0101 1010; The Value of 'Z' x5A (Z in ASCII) (90 in Decimal)
0000 0000 0011 0100; Init with x34 (52 in decimal)
1111 1111 1111 1111; Initialze our incrementer/decrementer with xFFFF (-1 in decimal)
1111 1111 1110 0101; Initialize the midway point with xFFE6 (-27 in decimal)
                   ; 27 is used as midpoint because our loop starts at 52 and not 0
                   ; And our number prints pre-decrement.


